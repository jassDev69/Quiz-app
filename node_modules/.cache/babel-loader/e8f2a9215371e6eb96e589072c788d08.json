{"ast":null,"code":"var _jsxFileName = \"C:\\\\course docs\\\\ISI\\\\course 14-Software Deployment and Integration\\\\user\\\\server\\\\src\\\\components\\\\login.component.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'; // import UserContext from './userContext'\n\nexport default class Login extends Component {\n  // static contextType = UserContext\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      // this.setState({ [e.target.name]: e.target.value });\n      let fields = this.state.fields;\n      fields[e.target.name] = e.target.value;\n      this.setState({\n        fields\n      });\n    };\n\n    this.login = e => {\n      e.preventDefault();\n\n      if (this.validateForm()) {\n        let fields = {};\n        fields[\"emailid\"] = \"\";\n        fields[\"password\"] = \"\";\n        this.setState({\n          fields: fields\n        });\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.state.fields.emailid,\n            password: this.state.fields.password\n          })\n        };\n        fetch('https://backend-quiz.herokuapp.com/api/user/login', requestOptions).then(response => response.json()).then(data => {\n          if (data.status === 200) {\n            alert(data.message); // localStorage.setItem('loggedIn', true);\n\n            const newUser = {\n              loggedIn: true\n            };\n            this.setState({\n              redirect: true\n            });\n          } else {\n            alert(data.message);\n          }\n        });\n      }\n    };\n\n    this.state = {\n      fields: {},\n      errors: {},\n      user: {},\n      redirect: false\n    }; // localStorage.setItem('loggedIn', false);\n  }\n\n  componentDidMount() {\n    // const user = this.context\n    console.log(user); // { name: 'Tania', loggedIn: true }\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"emailid\"]) {\n      formIsValid = false;\n      errors[\"emailid\"] = \"*Please enter your email-ID.\";\n    }\n\n    if (typeof fields[\"emailid\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(fields[\"emailid\"])) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter valid email-ID.\";\n      }\n    }\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"*Please enter your password.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    const _this$context = this.context,\n          user = _this$context.user,\n          setUser = _this$context.setUser;\n\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      name: \"emailid\",\n      value: this.state.fields.emailid || '',\n      onChange: this.handleChange,\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.errors.emailid)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.fields.password || '',\n      onChange: this.handleChange,\n      className: \"form-control\",\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.errors.password)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"customCheck1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"customCheck1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Remember me\"))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\course docs\\ISI\\course 14-Software Deployment and Integration\\user\\server\\src\\components\\login.component.js"],"names":["React","Component","Redirect","Login","constructor","props","handleChange","e","fields","state","target","name","value","setState","login","preventDefault","validateForm","requestOptions","method","headers","body","JSON","stringify","email","emailid","password","fetch","then","response","json","data","status","alert","message","newUser","loggedIn","redirect","errors","user","componentDidMount","console","log","formIsValid","pattern","RegExp","test","render","context","setUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,kBAAvB,C,CACA;;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACzC;AAEAG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAenBC,YAfmB,GAeJC,CAAD,IAAK;AACf;AACA,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;AACAA,MAAAA,MAAM,CAACD,CAAC,CAACG,MAAF,CAASC,IAAV,CAAN,GAAwBJ,CAAC,CAACG,MAAF,CAASE,KAAjC;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA;AADY,OAAd;AAGD,KAtBgB;;AAAA,SAuDnBM,KAvDmB,GAuDVP,CAAD,IAAQ;AACZA,MAAAA,CAAC,CAACQ,cAAF;;AACA,UAAI,KAAKC,YAAL,EAAJ,EAAyB;AACrB,YAAIR,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,EAApB;AACAA,QAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,EAArB;AACA,aAAKK,QAAL,CAAc;AAACL,UAAAA,MAAM,EAACA;AAAR,SAAd;AAEA,cAAMS,cAAc,GAAG;AACnBC,UAAAA,MAAM,EAAE,MADW;AAEnBC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFU;AAGnBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,YAAAA,KAAK,EAAC,KAAKd,KAAL,CAAWD,MAAX,CAAkBgB,OAA1B;AAAkCC,YAAAA,QAAQ,EAAC,KAAKhB,KAAL,CAAWD,MAAX,CAAkBiB;AAA7D,WAAf;AAHa,SAAvB;AAMAC,QAAAA,KAAK,CAAC,mDAAD,EAAsDT,cAAtD,CAAL,CACKU,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,cAAGA,IAAI,CAACC,MAAL,KAAgB,GAAnB,EAAuB;AACnBC,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL,CADmB,CAEnB;;AACA,kBAAMC,OAAO,GAAG;AAACC,cAAAA,QAAQ,EAAE;AAAX,aAAhB;AAEA,iBAAKtB,QAAL,CAAc;AACVuB,cAAAA,QAAQ,EAAE;AADA,aAAd;AAGH,WARD,MAQK;AACDJ,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACH;AAEJ,SAfL;AAgBH;AACJ,KAtFkB;;AAEf,SAAKxB,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE,EADC;AAET6B,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITF,MAAAA,QAAQ,EAAG;AAJF,KAAb,CAFe,CAQf;AACH;;AACDG,EAAAA,iBAAiB,GAAG;AAChB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHgB,CAGE;AACnB;;AAUDtB,EAAAA,YAAY,GAAG;AACb,QAAIR,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;AACA,QAAI6B,MAAM,GAAG,EAAb;AACA,QAAIK,WAAW,GAAG,IAAlB;;AAGA,QAAI,CAAClC,MAAM,CAAC,SAAD,CAAX,EAAwB;AACtBkC,MAAAA,WAAW,GAAG,KAAd;AACAL,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,8BAApB;AACD;;AAED,QAAI,OAAO7B,MAAM,CAAC,SAAD,CAAb,KAA6B,WAAjC,EAA8C;AAC5C;AACA,UAAImC,OAAO,GAAG,IAAIC,MAAJ,CAAW,iSAAX,CAAd;;AACA,UAAI,CAACD,OAAO,CAACE,IAAR,CAAarC,MAAM,CAAC,SAAD,CAAnB,CAAL,EAAsC;AACpCkC,QAAAA,WAAW,GAAG,KAAd;AACAL,QAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,+BAApB;AACD;AACF;;AAED,QAAI,CAAC7B,MAAM,CAAC,UAAD,CAAX,EAAyB;AACvBkC,MAAAA,WAAW,GAAG,KAAd;AACAL,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,8BAArB;AACD;;AAED,SAAKxB,QAAL,CAAc;AACZwB,MAAAA,MAAM,EAAEA;AADI,KAAd;AAGA,WAAOK,WAAP;AACD;;AAkCHI,EAAAA,MAAM,GAAG;AAAA,0BACqB,KAAKC,OAD1B;AAAA,UACGT,IADH,iBACGA,IADH;AAAA,UACSU,OADT,iBACSA,OADT;;AAEL,QAAI,KAAKvC,KAAL,CAAW2B,QAAf,EAAyB;AACrB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACH,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKtB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAO,MAAA,IAAI,EAAE,SAAb;AAAuB,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWD,MAAX,CAAkBgB,OAAlB,IAA4B,EAA1D;AAA8D,MAAA,QAAQ,EAAE,KAAKlB,YAA7E;AAA2F,MAAA,IAAI,EAAC,OAAhG;AAAwG,MAAA,SAAS,EAAC,cAAlH;AAAiI,MAAA,WAAW,EAAC,aAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKG,KAAL,CAAW4B,MAAX,CAAkBb,OAA7C,CAHJ,CAHJ,EASI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWD,MAAX,CAAkBiB,QAAlB,IAA6B,EAA3E;AAA+E,MAAA,QAAQ,EAAE,KAAKnB,YAA9F;AAA4G,MAAA,SAAS,EAAC,cAAtH;AAAqI,MAAA,WAAW,EAAC,gBAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKG,KAAL,CAAW4B,MAAX,CAAkBZ,QAA7C,CAHJ,CATJ,EAeI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,sBAAjC;AAAwD,MAAA,EAAE,EAAC,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAwC,MAAA,OAAO,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ,CAfJ,EAsBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,2BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,CADJ;AA6BH;;AA5HwC","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\n// import UserContext from './userContext'\r\n\r\nexport default class Login extends Component {\r\n    // static contextType = UserContext\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            user: {},\r\n            redirect : false\r\n        };\r\n        // localStorage.setItem('loggedIn', false);\r\n    }\r\n    componentDidMount() {\r\n        // const user = this.context\r\n    \r\n        console.log(user) // { name: 'Tania', loggedIn: true }\r\n      }\r\n    handleChange =(e)=>{\r\n        // this.setState({ [e.target.name]: e.target.value });\r\n        let fields = this.state.fields;\r\n        fields[e.target.name] = e.target.value;\r\n        this.setState({\r\n          fields\r\n        });\r\n      }\r\n\r\n      validateForm() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n      \r\n  \r\n        if (!fields[\"emailid\"]) {\r\n          formIsValid = false;\r\n          errors[\"emailid\"] = \"*Please enter your email-ID.\";\r\n        }\r\n  \r\n        if (typeof fields[\"emailid\"] !== \"undefined\") {\r\n          //regular expression for email validation\r\n          var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n          if (!pattern.test(fields[\"emailid\"])) {\r\n            formIsValid = false;\r\n            errors[\"emailid\"] = \"*Please enter valid email-ID.\";\r\n          }\r\n        }    \r\n\r\n        if (!fields[\"password\"]) {\r\n          formIsValid = false;\r\n          errors[\"password\"] = \"*Please enter your password.\";\r\n        }    \r\n\r\n        this.setState({\r\n          errors: errors\r\n        });\r\n        return formIsValid; \r\n      }\r\n\r\n    login = (e) =>  {\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n            let fields = {};\r\n            fields[\"emailid\"] = \"\";\r\n            fields[\"password\"] = \"\";\r\n            this.setState({fields:fields});\r\n            \r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email:this.state.fields.emailid,password:this.state.fields.password })\r\n            };\r\n\r\n            fetch('https://backend-quiz.herokuapp.com/api/user/login', requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if(data.status === 200){\r\n                        alert(data.message);\r\n                        // localStorage.setItem('loggedIn', true);\r\n                        const newUser = {loggedIn: true }\r\n                  \r\n                        this.setState({\r\n                            redirect: true\r\n                          });\r\n                    }else{\r\n                        alert(data.message);\r\n                    }\r\n                  \r\n                });\r\n        }    \r\n    }\r\n    render() {\r\n        const { user, setUser } = this.context\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/home' />\r\n          }\r\n        return (\r\n            <form onSubmit={this.login}>\r\n                <h3>Sign In</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input name =\"emailid\" value={this.state.fields.emailid ||''} onChange={this.handleChange} type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                    <div className=\"errorMsg\">{this.state.errors.emailid}</div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"password\" value={this.state.fields.password ||''} onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter password\" />\r\n                    <div className=\"errorMsg\">{this.state.errors.password}</div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" >Submit</button>\r\n                {/* <p className=\"forgot-password text-right\">\r\n                    Forgot <a href=\"#\">password?</a>\r\n                </p> */}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}