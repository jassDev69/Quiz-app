{"ast":null,"code":"var _jsxFileName = \"C:\\\\course docs\\\\ISI\\\\course 14-Software Deployment and Integration\\\\user\\\\server\\\\src\\\\components\\\\beginQuiz.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\nimport React from 'react'; // const result = [{qusname:'what is you firstname' , option:'jassi,jaskaran,karan,prabh' , correct:'jassi'},\n//                 {qusname:'what is you lastname' , option:'singh,kaur,lake,wheat' , correct:'singh'}\n//                 ]\n\nexport default class Begin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionChange = changeEvent => {\n      this.setState({\n        selectedoption: changeEvent.target.value\n      });\n      console.log(this.state.selectedoption);\n    };\n\n    this.state = {\n      userData: [],\n      len: 0,\n      option: \"\",\n      selectedoption: '',\n      loggedData: JSON.parse(localStorage.getItem('loggedData'))\n    };\n  } //calling the api to get favourite list data\n\n\n  componentDidMount() {\n    const url = 'https://backend-quiz.herokuapp.com/api/user/questions';\n    fetch(url).then(res => res.json()).then(result => {\n      this.setState({\n        userData: result\n      });\n    });\n  }\n\n  nextQuestion(e) {\n    let insertData = {\n      optionSelected: this.state.selectedoption,\n      selectedID: e,\n      user_id: this.state.loggedData[0].id\n    };\n    const url = 'https://backend-quiz.herokuapp.com/api/user/submitQuestion';\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(insertData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      if (result.status === 200) {\n        this.forceUpdate();\n        this.state.len += 1;\n        this.setState({\n          selectedoption: ''\n        });\n      }\n    });\n  }\n\n  callnull() {\n    this.setState({\n      selectedoption: ''\n    });\n  }\n\n  calloptions() {\n    this.state.option = this.state.userData[this.state.len].options.split(\",\");\n  }\n\n  render() {\n    // eslint-disable-next-line no-lone-blocks\n    // {this.state.userData.map((item,i) => (this.state.option = item.options.split(\",\")))}\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.len < this.state.userData.length && React.createElement(\"div\", {\n      className: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.calloptions(), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.userData[this.state.len].question_text), this.state.option.map((opt, key) => React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: opt,\n      value: opt,\n      onChange: this.handleOptionChange,\n      checked: opt === this.state.selectedoption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \" \", opt)), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"button\",\n      disabled: !this.state.selectedoption,\n      onClick: () => {\n        this.nextQuestion(this.state.userData[this.state.len].id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" \", this.state.len < this.state.userData.length - 1 ? Next : Finish)));\n  }\n\n}","map":{"version":3,"sources":["C:\\course docs\\ISI\\course 14-Software Deployment and Integration\\user\\server\\src\\components\\beginQuiz.js"],"names":["React","Begin","Component","constructor","props","handleOptionChange","changeEvent","setState","selectedoption","target","value","console","log","state","userData","len","option","loggedData","JSON","parse","localStorage","getItem","componentDidMount","url","fetch","then","res","json","result","nextQuestion","e","insertData","optionSelected","selectedID","user_id","id","method","body","stringify","headers","status","forceUpdate","callnull","calloptions","options","split","render","length","question_text","map","opt","key","Next","Finish"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\r\nimport React from 'react';\r\n\r\n// const result = [{qusname:'what is you firstname' , option:'jassi,jaskaran,karan,prabh' , correct:'jassi'},\r\n//                 {qusname:'what is you lastname' , option:'singh,kaur,lake,wheat' , correct:'singh'}\r\n//                 ]\r\n\r\nexport default  class Begin extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        userData: [],\r\n        len : 0 ,\r\n        option : \"\" ,\r\n        selectedoption : '',\r\n        loggedData : JSON.parse(localStorage.getItem('loggedData'))\r\n      };\r\n    }\r\n         \r\n  //calling the api to get favourite list data\r\n    componentDidMount() {\r\n      const url = 'https://backend-quiz.herokuapp.com/api/user/questions'\r\n      fetch(url)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              userData: result\r\n            });\r\n          },\r\n        )   \r\n    }\r\n    nextQuestion (e)\r\n    {    \r\n      let insertData = {\r\n        optionSelected : this.state.selectedoption,\r\n        selectedID : e,\r\n        user_id : this.state.loggedData[0].id\r\n        }\r\n        const url = 'https://backend-quiz.herokuapp.com/api/user/submitQuestion'\r\n        fetch(url,{\r\n          method: 'POST',\r\n          body: JSON.stringify(insertData),\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n             if(result.status ===200){\r\n              this.forceUpdate()\r\n              this.state.len+=1\r\n              this.setState({\r\n                selectedoption: ''\r\n              });\r\n             }\r\n            },\r\n          )\r\n    }\r\n\r\n    callnull()\r\n    {\r\n      this.setState({selectedoption:''})\r\n    }\r\n\r\n    calloptions()\r\n    {\r\n      this.state.option = this.state.userData[this.state.len].options.split(\",\")\r\n    }\r\n   \r\n    handleOptionChange = (changeEvent) => {\r\n      this.setState({\r\n        selectedoption: changeEvent.target.value\r\n      });\r\n      console.log(this.state.selectedoption)\r\n    }\r\n  \r\n    render() {\r\n      // eslint-disable-next-line no-lone-blocks\r\n      // {this.state.userData.map((item,i) => (this.state.option = item.options.split(\",\")))}\r\n        return (     \r\n        <div>\r\n            {this.state.len < this.state.userData.length &&\r\n                <div className=\"options\">\r\n                    {this.calloptions()}\r\n                    <h2>{this.state.userData[this.state.len].question_text}</h2>\r\n                                                    \r\n                    {this.state.option.map((opt,key) =>(\r\n                      <div key={key} >\r\n                        <input type=\"radio\" name={opt} value={opt} onChange={this.handleOptionChange} checked={opt ===this.state.selectedoption} /> {opt}\r\n                      </div>\r\n                    ))}\r\n\r\n                  <button className=\"btn btn-primary btn-block\" type=\"button\" disabled={!this.state.selectedoption} onClick={()=>{this.nextQuestion(this.state.userData[this.state.len].id)}}> {this.state.len < this.state.userData.length-1 ?Next : Finish}</button>\r\n                </div>\r\n            }\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}