{"ast":null,"code":"var _jsxFileName = \"C:\\\\course docs\\\\ISI\\\\course 14-Software Deployment and Integration\\\\user\\\\server\\\\src\\\\components\\\\signup.component.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      // this.setState({ [e.target.name]: e.target.value });\n      let fields = this.state.fields;\n      fields[e.target.name] = e.target.value;\n      this.setState({\n        fields\n      });\n    };\n\n    this.signUp = e => {\n      e.preventDefault();\n\n      if (this.validateForm()) {\n        let fields = {};\n        fields[\"firstName\"] = \"\";\n        fields[\"lastName\"] = \"\";\n        fields[\"emailid\"] = \"\";\n        fields[\"password\"] = \"\";\n        this.setState({\n          fields: fields\n        });\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            emailId: this.state.emailId,\n            password: this.state.password\n          })\n        };\n        fetch('https://backend-quiz.herokuapp.com/api/user/signup', requestOptions).then(response => response.json()).then(data => {\n          alert(data.message);\n          localStorage.setItem('loggedIn', true);\n          this.setState({\n            redirect: true\n          });\n        });\n      }\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      emailid: '',\n      password: '',\n      fields: {},\n      errors: {},\n      redirect: false\n    };\n    localStorage.setItem('loggedIn', false);\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"emailid\"]) {\n      formIsValid = false;\n      errors[\"emailid\"] = \"*Please enter your email-ID.\";\n    }\n\n    if (typeof fields[\"emailid\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(fields[\"emailid\"])) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter valid email-ID.\";\n      }\n    }\n\n    if (!fields[\"firstName\"]) {\n      formIsValid = false;\n      errors[\"firstName\"] = \"*Please enter your first name.\";\n    }\n\n    if (!fields[\"lastName\"]) {\n      formIsValid = false;\n      errors[\"lastName\"] = \"*Please enter your last name.\";\n    }\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"*Please enter your password.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      value: this.state.firstName || '',\n      onChange: this.handleChange,\n      className: \"form-control\",\n      placeholder: \"First name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.errors.firstName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      name: \"lastName\",\n      value: this.state.lastName || '',\n      onChange: this.handleChange,\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.errors.lastName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      name: \"emailid\",\n      value: this.state.fields.emailid || '',\n      onChange: this.handleChange,\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.errors.emailid)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.fields.password || '',\n      onChange: this.handleChange,\n      className: \"form-control\",\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.errors.password)), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => {\n        this.signUp();\n      },\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Sign Up\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\course docs\\ISI\\course 14-Software Deployment and Integration\\user\\server\\src\\components\\signup.component.js"],"names":["React","Component","Redirect","SignUp","constructor","props","handleChange","e","fields","state","target","name","value","setState","signUp","preventDefault","validateForm","requestOptions","method","headers","body","JSON","stringify","firstName","lastName","emailId","password","fetch","then","response","json","data","alert","message","localStorage","setItem","redirect","emailid","errors","formIsValid","pattern","RegExp","test","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport default class SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            emailid: '',\r\n            password:'',\r\n            fields: {},\r\n            errors: {},\r\n            redirect : false\r\n        };\r\n        localStorage.setItem('loggedIn', false);\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        // this.setState({ [e.target.name]: e.target.value });\r\n        let fields = this.state.fields;\r\n        fields[e.target.name] = e.target.value;\r\n        this.setState({\r\n          fields\r\n        });\r\n      }\r\n\r\n     validateForm() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n      \r\n  \r\n        if (!fields[\"emailid\"]) {\r\n          formIsValid = false;\r\n          errors[\"emailid\"] = \"*Please enter your email-ID.\";\r\n        }\r\n  \r\n        if (typeof fields[\"emailid\"] !== \"undefined\") {\r\n          //regular expression for email validation\r\n          var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n          if (!pattern.test(fields[\"emailid\"])) {\r\n            formIsValid = false;\r\n            errors[\"emailid\"] = \"*Please enter valid email-ID.\";\r\n          }\r\n        }    \r\n\r\n        if (!fields[\"firstName\"]) {\r\n          formIsValid = false;\r\n          errors[\"firstName\"] = \"*Please enter your first name.\";\r\n        }   \r\n\r\n        if (!fields[\"lastName\"]) {\r\n            formIsValid = false;\r\n            errors[\"lastName\"] = \"*Please enter your last name.\";\r\n          }   \r\n  \r\n        if (!fields[\"password\"]) {\r\n        formIsValid = false;\r\n        errors[\"password\"] = \"*Please enter your password.\";\r\n        }    \r\n\r\n\r\n        this.setState({\r\n          errors: errors\r\n        });\r\n        return formIsValid; \r\n      }\r\n    signUp = (e) =>  {\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n            let fields = {};\r\n            fields[\"firstName\"] = \"\";\r\n            fields[\"lastName\"] = \"\";\r\n            fields[\"emailid\"] = \"\";\r\n            fields[\"password\"] = \"\";\r\n            this.setState({fields:fields});\r\n                \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ firstName:this.state.firstName, lastName:this.state.lastName,emailId:this.state.emailId,password:this.state.password })\r\n        };\r\n        fetch('https://backend-quiz.herokuapp.com/api/user/signup', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                alert(data.message);\r\n                localStorage.setItem('loggedIn', true);\r\n                this.setState({\r\n                    redirect: true\r\n                  });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/home' />\r\n          }\r\n        return (\r\n            <form>\r\n                <h3>Sign Up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>                 \r\n                    <input type=\"text\" name=\"firstName\" value={this.state.firstName ||''} onChange={this.handleChange}  className=\"form-control\" placeholder=\"First name\" />\r\n                    <div className=\"errorMsg\">{this.state.errors.firstName}</div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input  name=\"lastName\" value={this.state.lastName ||''} onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n                    <div className=\"errorMsg\">{this.state.errors.lastName}</div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input name =\"emailid\" value={this.state.fields.emailid ||''} onChange={this.handleChange} type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                    <div className=\"errorMsg\">{this.state.errors.emailid}</div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"password\" value={this.state.fields.password ||''} onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter password\" />\r\n                    <div className=\"errorMsg\">{this.state.errors.password}</div>\r\n                </div>\r\n                {/* onClick={this.componentDidMountsas()} */}\r\n                <button type=\"submit\" onClick={()=>{this.signUp()}} className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                {/* <p className=\"forgot-password text-right\">\r\n                    Already registered <a>sign in?</a>\r\n                </p> */}\r\n            </form>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}