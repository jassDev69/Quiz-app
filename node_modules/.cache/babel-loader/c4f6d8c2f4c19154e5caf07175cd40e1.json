{"ast":null,"code":"var _jsxFileName = \"C:\\\\course docs\\\\ISI\\\\course 14-Software Deployment and Integration\\\\user\\\\server\\\\src\\\\components\\\\score.js\";\nimport React, { Component } from \"react\";\nexport default class Score extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      userData: [],\n      loggedData: JSON.parse(localStorage.getItem('loggedData'))\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: this.state.loggedData[0]\n      }.id)\n    };\n    console.log(this.state.loggedData[0].id); // fetch('http://localhost:3002/api/user/scores', requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         if(data.status === 200){                      \n    //             this.setState({\n    //                 userData: data\n    //               });\n    //         }\n    //     });\n  }\n\n  render() {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Your Score is \", this.state.userData.count, \" \");\n  }\n\n}","map":{"version":3,"sources":["C:\\course docs\\ISI\\course 14-Software Deployment and Integration\\user\\server\\src\\components\\score.js"],"names":["React","Component","Score","constructor","props","state","redirect","userData","loggedData","JSON","parse","localStorage","getItem","requestOptions","method","headers","body","stringify","id","console","log","render","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETC,MAAAA,QAAQ,EAAG,EAFF;AAGTC,MAAAA,UAAU,EAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX;AAHJ,KAAb;AAMI,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEP,IAAI,CAACQ,SAAL,CAAe;AAAEC,QAAAA,EAAE,EAAC,KAAKb,KAAL,CAAWG,UAAX,CAAsB,CAAtB;AAAL,QAA+BU,EAA9C;AAHa,KAAvB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWG,UAAX,CAAsB,CAAtB,EAAyBU,EAArC,EAbW,CAeX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;;AAEDG,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKhB,KAAL,CAAWE,QAAX,CAAoBe,KAAvC,MADJ;AAIH;;AAjCwC","sourcesContent":["import React, { Component } from \"react\";\r\nexport default class Score extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect : false,\r\n            userData : [],\r\n            loggedData : JSON.parse(localStorage.getItem('loggedData'))\r\n            };  \r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ id:this.state.loggedData[0]}.id)\r\n            };\r\n            console.log(this.state.loggedData[0].id)\r\n\r\n            // fetch('http://localhost:3002/api/user/scores', requestOptions)\r\n            //     .then(response => response.json())\r\n            //     .then(data => {\r\n            //         if(data.status === 200){                      \r\n            //             this.setState({\r\n            //                 userData: data\r\n            //               });\r\n            //         }\r\n            //     });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <h2>Your Score is {this.state.userData.count} </h2>      \r\n          \r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}