{"ast":null,"code":"var _jsxFileName = \"C:\\\\course docs\\\\ISI\\\\course 14-Software Deployment and Integration\\\\user\\\\server\\\\src\\\\components\\\\score.js\";\nimport React, { Component } from \"react\";\nexport default class Score extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      userData: \"\",\n      loggedData: JSON.parse(localStorage.getItem('loggedData'))\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: this.state.loggedData[0].id\n      })\n    };\n    fetch('http://localhost:3002/api/user/scores', requestOptions).then(response => response.json()).then(data => {\n      if (data.status === 200) {\n        this.setState({\n          userData: data.data[0].count\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Your Score is  : \", this.state.userData, \" \");\n  }\n\n}","map":{"version":3,"sources":["C:\\course docs\\ISI\\course 14-Software Deployment and Integration\\user\\server\\src\\components\\score.js"],"names":["React","Component","Score","constructor","props","state","redirect","userData","loggedData","JSON","parse","localStorage","getItem","requestOptions","method","headers","body","stringify","id","fetch","then","response","json","data","status","setState","count","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETC,MAAAA,QAAQ,EAAG,EAFF;AAGTC,MAAAA,UAAU,EAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX;AAHJ,KAAb;AAKI,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEP,IAAI,CAACQ,SAAL,CAAe;AAAEC,QAAAA,EAAE,EAAC,KAAKb,KAAL,CAAWG,UAAX,CAAsB,CAAtB,EAAyBU;AAA9B,OAAf;AAHa,KAAvB;AAKAC,IAAAA,KAAK,CAAC,uCAAD,EAA0CN,cAA1C,CAAL,CACKO,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,GAAnB,EAAuB;AACnB,aAAKC,QAAL,CAAc;AACVlB,UAAAA,QAAQ,EAAEgB,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaG;AADb,SAAd;AAGH;AACJ,KARL;AASP;;AAEDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKtB,KAAL,CAAWE,QAAjC,MADJ;AAIH;;AA9BwC","sourcesContent":["import React, { Component } from \"react\";\r\nexport default class Score extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect : false,\r\n            userData : \"\",\r\n            loggedData : JSON.parse(localStorage.getItem('loggedData'))\r\n            }; \r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ id:this.state.loggedData[0].id})\r\n            };\r\n            fetch('http://localhost:3002/api/user/scores', requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if(data.status === 200){                 \r\n                        this.setState({\r\n                            userData: data.data[0].count\r\n                          });\r\n                    }\r\n                });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <h2>Your Score is  : {this.state.userData} </h2>      \r\n          \r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}